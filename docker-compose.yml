services:
  frontend:
    container_name: depex_frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - '3000:3000'
    networks:
      - depex

  backend:
    container_name: depex_backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    volumes:
      - ./backend:/backend
      - .env:/backend/.env
    depends_on:
      graph_database:
        condition: service_healthy
      vuln_database_seeder:
        condition: service_completed_successfully
    ports:
      - '8000:8000'
    networks:
      - depex
    healthcheck:
      test: curl --fail http://localhost:8000/health || exit 1
      interval: 100s
      timeout: 100s
      retries: 10
      start_period: 300s

  graph_database:
    env_file: .env
    container_name: neo4j
    image: neo4j:5.26.4
    environment:
      - EXTENSION_SCRIPT=/seeds/graphdb_seeder.sh
      - NEO4J_AUTH=${GRAPH_DB_USER}/${GRAPH_DB_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_server_http_listen__address=:7474
      - NEO4J_server_http_advertised__address=:7474
      - NEO4J_server_bolt_listen__address=:7687
      - NEO4J_server_bolt_advertised__address=:7687
      - NEO4J_apoc_export_file_enabled=true
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - ./seeds/graphs/neo4j.dump:/backups/neo4j.dump
      - ./seeds/graphdb_seeder.sh:/seeds/graphdb_seeder.sh
    networks:
      - depex
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 100s
      timeout: 100s
      retries: 10
      start_period: 300s

  vuln_database_seeder:
    env_file: .env
    container_name: mongodb_seeder
    image: mongo:8.0.5
    depends_on:
      vuln_database:
        condition: service_healthy
    volumes:
      - ./seeds/vuln/:/seeds/vuln/
      - ./seeds/vulndb_seeder.sh:/seeds/vulndb_seeder.sh
    command: /seeds/vulndb_seeder.sh
    networks:
      - depex

  vuln_database:
    env_file: .env
    container_name: mongodb
    image: mongo:8.0.5
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${VULN_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${VULN_DB_PASSWORD}
    ports:
      - '27017:27017'
    networks:
      - depex
    healthcheck:
      test: "echo 'db.stats().ok' | mongosh --username=${VULN_DB_USER} --password=${VULN_DB_PASSWORD} --authenticationDatabase=admin mongodb/testdb"
      interval: 100s
      timeout: 100s
      retries: 10
      start_period: 300s

networks:
  depex:
    driver: bridge
